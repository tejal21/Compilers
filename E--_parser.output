Terminals unused in grammar

   TOK_LEX_ERROR
   TOK_PAT_NOT
   TOK_PRINT
   TOK_SHORT
   TOK_DOUBLE_COLON
   TOK_LBRACK
   TOK_DOT


State 19 conflicts: 2 shift/reduce
State 68 conflicts: 1 reduce/reduce
State 72 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 181 conflicts: 4 shift/reduce
State 201 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce


Grammar

    0 $accept: specification_start $end

    1 specification_start: specification

    2 specification: specification declarations
    3              | /* empty */

    4 declarations: variable_decl
    5             | event_declaration
    6             | rule
    7             | function_definition
    8             | function_prototype
    9             | class_declaration
   10             | statements
   11             | TOK_IDENT general_list semicolon

   12 general_list: general_list TOK_COMMA TOK_IDENT
   13             | TOK_IDENT

   14 class_declaration: TOK_CLASS id_recognition TOK_SEMICOLON TOK_SEMICOLON
   15                  | TOK_CLASS id_recognition TOK_SEMICOLON
   16                  | TOK_CLASS error TOK_SEMICOLON TOK_SEMICOLON
   17                  | TOK_CLASS error TOK_SEMICOLON

   18 function_prototype: function_decl TOK_SEMICOLON

   19 function_decl: type_recognition id_recognition formal_param_list1

   20 function_definition: function_decl func_body_statement_recog TOK_SEMICOLON

   21 func_body_statement_recog: TOK_LBRACE func_body TOK_RBRACE

   22 func_body: func_local_var_decl
   23          | func_body compoundStmt3
   24          | /* empty */

   25 function_invocation: id_recognition TOK_LPAREN expr_list TOK_RPAREN

   26 expr_list: expr_list TOK_COMMA expressions
   27          | expressions
   28          | /* empty */

   29 formal_param_list1: TOK_LPAREN formal_param_list1 TOK_RPAREN
   30                   | formal_param_list1 TOK_COMMA formal_param1
   31                   | formal_param1
   32                   | TOK_LPAREN TOK_RPAREN

   33 formal_param1: type_recognition id_recognition

   34 func_local_var_decl: type_recognition variable_decl_list1 TOK_SEMICOLON
   35                    | type_recognition error TOK_SEMICOLON

   36 variable_decl_list1: variable_wo_val1
   37                    | variable_w_val1

   38 variable_wo_val1: variable_wo_val1 TOK_COMMA variable1
   39                 | variable1

   40 variable_w_val1: id_recognition TOK_ASSIGN expressions

   41 variable1: id_recognition

   42 event_declaration: TOK_EVENT id_recognition formal_param_list TOK_SEMICOLON

   43 rule: event_pattern TOK_ARROW rule_body1

   44 primitive_pat: TOK_IDENT ep_list_recognition
   45              | any_event_recog
   46              | TOK_IDENT ep_list_recognition TOK_BITOR expressions

   47 event_pattern: primitive_pat
   48              | binary_pattern_operators
   49              | TOK_LPAREN event_pattern TOK_RPAREN

   50 binary_pattern_operators: event_pattern TOK_PAT_OR event_pattern
   51                         | event_pattern TOK_PAT_STAR
   52                         | event_pattern TOK_COLON event_pattern
   53                         | TOK_NOT event_pattern

   54 rule_body1: TOK_LBRACE compoundStmt1 TOK_RBRACE TOK_SEMICOLON
   55           | TOK_LBRACE compoundStmt1 TOK_RBRACE
   56           | statements

   57 ep_list_recognition: TOK_LPAREN ep_list_recognition TOK_RPAREN
   58                    | ep_list_recognition TOK_COMMA TOK_IDENT
   59                    | TOK_IDENT
   60                    | TOK_LPAREN TOK_RPAREN

   61 any_event_recog: TOK_ANY

   62 formal_param_list: TOK_LPAREN formal_param_list TOK_RPAREN
   63                  | formal_param_list TOK_COMMA formal_param
   64                  | formal_param
   65                  | TOK_LPAREN TOK_RPAREN

   66 formal_param: type_recognition id_recognition

   67 variable_decl: type_recognition variable_decl_list semicolon

   68 variable_decl_list: variable_decl_list TOK_COMMA var
   69                   | var

   70 var: variable
   71    | id_recognition TOK_ASSIGN expressions

   72 variable: TOK_IDENT

   73 semicolon: semicolon TOK_SEMICOLON
   74          | TOK_SEMICOLON

   75 statements: if_then_else_stmt
   76           | asg_stmt
   77           | func_call_stmt
   78           | TOK_SEMICOLON
   79           | TOK_RETURN expressions TOK_SEMICOLON

   80 func_call_stmt: function_invocation TOK_SEMICOLON

   81 compoundStmt1: compoundStmt1 statements
   82              | statements

   83 compoundStmt2: compoundStmt2 statements
   84              | statements

   85 compoundStmt3: compoundStmt3 statements
   86              | statements

   87 if_then_else_stmt: TOK_IF TOK_LPAREN condition_exp TOK_RPAREN if_body else_statement
   88                  | TOK_IF TOK_LPAREN condition_exp TOK_RPAREN if_body

   89 if_body: TOK_LBRACE compoundStmt2 TOK_RBRACE
   90        | statements

   91 condition_exp: expressions

   92 else_statement: TOK_ELSE else_body

   93 else_body: statements
   94          | TOK_LBRACE compoundStmt2 TOK_RBRACE

   95 mathematical_expression: expressions TOK_MINUS expressions
   96                        | expressions TOK_PLUS expressions
   97                        | expressions TOK_MULT expressions
   98                        | expressions TOK_DIV expressions
   99                        | expressions TOK_MOD expressions
  100                        | expressions TOK_GT expressions
  101                        | expressions TOK_LT expressions
  102                        | expressions TOK_GE expressions
  103                        | expressions TOK_LE expressions
  104                        | expressions TOK_NE expressions
  105                        | expressions TOK_EQ expressions
  106                        | expressions TOK_AND expressions
  107                        | expressions TOK_OR expressions
  108                        | expressions TOK_BITAND expressions
  109                        | expressions TOK_BITOR expressions
  110                        | expressions TOK_BITXOR expressions
  111                        | expressions TOK_SHR expressions
  112                        | expressions TOK_SHL expressions

  113 unary_operators: TOK_NOT expressions
  114                | TOK_BITNOT expressions
  115                | TOK_MINUS expressions

  116 expressions: ref_expression
  117            | assignments
  118            | function_invocation
  119            | literals
  120            | TOK_LPAREN expressions TOK_RPAREN
  121            | unary_operators
  122            | mathematical_expression

  123 ref_expression: TOK_IDENT

  124 asg_stmt: assignments TOK_SEMICOLON

  125 assignments: ref_expression TOK_ASSIGN expressions

  126 literals: TOK_STRCONST
  127         | TOK_UINTNUM
  128         | TOK_DOUBLENUM
  129         | TOK_TRUE
  130         | TOK_FALSE

  131 id_recognition: TOK_IDENT

  132 type_recognition: TOK_INT
  133                 | TOK_BOOL
  134                 | TOK_BYTE
  135                 | TOK_DOUBLE
  136                 | TOK_VOID
  137                 | TOK_STRING
  138                 | TOK_UNSIGNED TOK_INT
  139                 | TOK_IDENT


Terminals, with rules where they appear

$end (0) 0
error (256) 16 17 35
TOK_LEX_ERROR (258)
TOK_PAT_STAR (259) 51
TOK_PAT_OR (260) 50
TOK_PAT_NOT (261)
TOK_PLUS (262) 96
TOK_MINUS (263) 95 115
TOK_UMINUS (264)
TOK_MULT (265) 97
TOK_DIV (266) 98
TOK_MOD (267) 99
TOK_BITAND (268) 108
TOK_BITOR (269) 46 109
TOK_BITNOT (270) 114
TOK_BITXOR (271) 110
TOK_SHL (272) 112
TOK_SHR (273) 111
TOK_GT (274) 100
TOK_LT (275) 101
TOK_GE (276) 102
TOK_LE (277) 103
TOK_EQ (278) 105
TOK_NE (279) 104
TOK_AND (280) 106
TOK_OR (281) 107
TOK_NOT (282) 53 113
TOK_COMMA (283) 12 26 30 38 58 63 68
TOK_ASSIGN (284) 40 71 125
TOK_SEMICOLON (285) 14 15 16 17 18 20 34 35 42 54 73 74 78 79 80 124
TOK_COLON (286) 52
TOK_ARROW (287) 43
TOK_LBRACE (288) 21 54 55 89 94
TOK_RBRACE (289) 21 54 55 89 94
TOK_LPAREN (290) 25 29 32 49 57 60 62 65 87 88 120
TOK_RPAREN (291) 25 29 32 49 57 60 62 65 87 88 120
TOK_IF (292) 87 88
TOK_ELSE (293) 92
TOK_CLASS (294) 14 15 16 17
TOK_RETURN (295) 79
TOK_EVENT (296) 42
TOK_ANY (297) 61
TOK_PRINT (298)
TOK_UINTNUM (299) 127
TOK_DOUBLENUM (300) 128
TOK_VOID (301) 136
TOK_STRING (302) 137
TOK_STRCONST (303) 126
TOK_INT (304) 132 138
TOK_UNSIGNED (305) 138
TOK_BOOL (306) 133
TOK_BYTE (307) 134
TOK_DOUBLE (308) 135
TOK_SHORT (309)
TOK_TRUE (310) 129
TOK_FALSE (311) 130
TOK_IDENT (312) 11 12 13 44 46 58 59 72 123 131 139
TOK_DOUBLE_COLON (313)
TOK_LBRACK (314)
TOK_DOT (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
specification_start (62)
    on left: 1, on right: 0
specification (63)
    on left: 2 3, on right: 1 2
declarations (64)
    on left: 4 5 6 7 8 9 10 11, on right: 2
general_list (65)
    on left: 12 13, on right: 11 12
class_declaration (66)
    on left: 14 15 16 17, on right: 9
function_prototype (67)
    on left: 18, on right: 8
function_decl (68)
    on left: 19, on right: 18 20
function_definition (69)
    on left: 20, on right: 7
func_body_statement_recog (70)
    on left: 21, on right: 20
func_body (71)
    on left: 22 23 24, on right: 21 23
function_invocation (72)
    on left: 25, on right: 80 118
expr_list (73)
    on left: 26 27 28, on right: 25 26
formal_param_list1 (74)
    on left: 29 30 31 32, on right: 19 29 30
formal_param1 (75)
    on left: 33, on right: 30 31
func_local_var_decl (76)
    on left: 34 35, on right: 22
variable_decl_list1 (77)
    on left: 36 37, on right: 34
variable_wo_val1 (78)
    on left: 38 39, on right: 36 38
variable_w_val1 (79)
    on left: 40, on right: 37
variable1 (80)
    on left: 41, on right: 38 39
event_declaration (81)
    on left: 42, on right: 5
rule (82)
    on left: 43, on right: 6
primitive_pat (83)
    on left: 44 45 46, on right: 47
event_pattern (84)
    on left: 47 48 49, on right: 43 49 50 51 52 53
binary_pattern_operators (85)
    on left: 50 51 52 53, on right: 48
rule_body1 (86)
    on left: 54 55 56, on right: 43
ep_list_recognition (87)
    on left: 57 58 59 60, on right: 44 46 57 58
any_event_recog (88)
    on left: 61, on right: 45
formal_param_list (89)
    on left: 62 63 64 65, on right: 42 62 63
formal_param (90)
    on left: 66, on right: 63 64
variable_decl (91)
    on left: 67, on right: 4
variable_decl_list (92)
    on left: 68 69, on right: 67 68
var (93)
    on left: 70 71, on right: 68 69
variable (94)
    on left: 72, on right: 70
semicolon (95)
    on left: 73 74, on right: 11 67 73
statements (96)
    on left: 75 76 77 78 79, on right: 10 56 81 82 83 84 85 86 90 93
func_call_stmt (97)
    on left: 80, on right: 77
compoundStmt1 (98)
    on left: 81 82, on right: 54 55 81
compoundStmt2 (99)
    on left: 83 84, on right: 83 89 94
compoundStmt3 (100)
    on left: 85 86, on right: 23 85
if_then_else_stmt (101)
    on left: 87 88, on right: 75
if_body (102)
    on left: 89 90, on right: 87 88
condition_exp (103)
    on left: 91, on right: 87 88
else_statement (104)
    on left: 92, on right: 87
else_body (105)
    on left: 93 94, on right: 92
mathematical_expression (106)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
    110 111 112, on right: 122
unary_operators (107)
    on left: 113 114 115, on right: 121
expressions (108)
    on left: 116 117 118 119 120 121 122, on right: 26 27 40 46 71
    79 91 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
    111 112 113 114 115 120 125
ref_expression (109)
    on left: 123, on right: 116 125
asg_stmt (110)
    on left: 124, on right: 76
assignments (111)
    on left: 125, on right: 117 124
literals (112)
    on left: 126 127 128 129 130, on right: 119
id_recognition (113)
    on left: 131, on right: 14 15 19 25 33 40 41 42 66 71
type_recognition (114)
    on left: 132 133 134 135 136 137 138 139, on right: 19 33 34 35
    66 67


state 0

    0 $accept: . specification_start $end

    $default  reduce using rule 3 (specification)

    specification_start  go to state 1
    specification        go to state 2


state 1

    0 $accept: specification_start . $end

    $end  shift, and go to state 3


state 2

    1 specification_start: specification .
    2 specification: specification . declarations

    TOK_NOT        shift, and go to state 4
    TOK_SEMICOLON  shift, and go to state 5
    TOK_LPAREN     shift, and go to state 6
    TOK_IF         shift, and go to state 7
    TOK_CLASS      shift, and go to state 8
    TOK_RETURN     shift, and go to state 9
    TOK_EVENT      shift, and go to state 10
    TOK_ANY        shift, and go to state 11
    TOK_VOID       shift, and go to state 12
    TOK_STRING     shift, and go to state 13
    TOK_INT        shift, and go to state 14
    TOK_UNSIGNED   shift, and go to state 15
    TOK_BOOL       shift, and go to state 16
    TOK_BYTE       shift, and go to state 17
    TOK_DOUBLE     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19

    $default  reduce using rule 1 (specification_start)

    declarations              go to state 20
    class_declaration         go to state 21
    function_prototype        go to state 22
    function_decl             go to state 23
    function_definition       go to state 24
    function_invocation       go to state 25
    event_declaration         go to state 26
    rule                      go to state 27
    primitive_pat             go to state 28
    event_pattern             go to state 29
    binary_pattern_operators  go to state 30
    any_event_recog           go to state 31
    variable_decl             go to state 32
    statements                go to state 33
    func_call_stmt            go to state 34
    if_then_else_stmt         go to state 35
    ref_expression            go to state 36
    asg_stmt                  go to state 37
    assignments               go to state 38
    id_recognition            go to state 39
    type_recognition          go to state 40


state 3

    0 $accept: specification_start $end .

    $default  accept


state 4

   53 binary_pattern_operators: TOK_NOT . event_pattern

    TOK_NOT     shift, and go to state 4
    TOK_LPAREN  shift, and go to state 6
    TOK_ANY     shift, and go to state 11
    TOK_IDENT   shift, and go to state 41

    primitive_pat             go to state 28
    event_pattern             go to state 42
    binary_pattern_operators  go to state 30
    any_event_recog           go to state 31


state 5

   78 statements: TOK_SEMICOLON .

    $default  reduce using rule 78 (statements)


state 6

   49 event_pattern: TOK_LPAREN . event_pattern TOK_RPAREN

    TOK_NOT     shift, and go to state 4
    TOK_LPAREN  shift, and go to state 6
    TOK_ANY     shift, and go to state 11
    TOK_IDENT   shift, and go to state 41

    primitive_pat             go to state 28
    event_pattern             go to state 43
    binary_pattern_operators  go to state 30
    any_event_recog           go to state 31


state 7

   87 if_then_else_stmt: TOK_IF . TOK_LPAREN condition_exp TOK_RPAREN if_body else_statement
   88                  | TOK_IF . TOK_LPAREN condition_exp TOK_RPAREN if_body

    TOK_LPAREN  shift, and go to state 44


state 8

   14 class_declaration: TOK_CLASS . id_recognition TOK_SEMICOLON TOK_SEMICOLON
   15                  | TOK_CLASS . id_recognition TOK_SEMICOLON
   16                  | TOK_CLASS . error TOK_SEMICOLON TOK_SEMICOLON
   17                  | TOK_CLASS . error TOK_SEMICOLON

    error      shift, and go to state 45
    TOK_IDENT  shift, and go to state 46

    id_recognition  go to state 47


state 9

   79 statements: TOK_RETURN . expressions TOK_SEMICOLON

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 61
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 10

   42 event_declaration: TOK_EVENT . id_recognition formal_param_list TOK_SEMICOLON

    TOK_IDENT  shift, and go to state 46

    id_recognition  go to state 65


state 11

   61 any_event_recog: TOK_ANY .

    $default  reduce using rule 61 (any_event_recog)


state 12

  136 type_recognition: TOK_VOID .

    $default  reduce using rule 136 (type_recognition)


state 13

  137 type_recognition: TOK_STRING .

    $default  reduce using rule 137 (type_recognition)


state 14

  132 type_recognition: TOK_INT .

    $default  reduce using rule 132 (type_recognition)


state 15

  138 type_recognition: TOK_UNSIGNED . TOK_INT

    TOK_INT  shift, and go to state 66


state 16

  133 type_recognition: TOK_BOOL .

    $default  reduce using rule 133 (type_recognition)


state 17

  134 type_recognition: TOK_BYTE .

    $default  reduce using rule 134 (type_recognition)


state 18

  135 type_recognition: TOK_DOUBLE .

    $default  reduce using rule 135 (type_recognition)


state 19

   11 declarations: TOK_IDENT . general_list semicolon
   44 primitive_pat: TOK_IDENT . ep_list_recognition
   46              | TOK_IDENT . ep_list_recognition TOK_BITOR expressions
  123 ref_expression: TOK_IDENT .
  131 id_recognition: TOK_IDENT .
  139 type_recognition: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 67
    TOK_IDENT   shift, and go to state 68

    TOK_LPAREN  [reduce using rule 131 (id_recognition)]
    TOK_IDENT   [reduce using rule 139 (type_recognition)]
    $default    reduce using rule 123 (ref_expression)

    general_list         go to state 69
    ep_list_recognition  go to state 70


state 20

    2 specification: specification declarations .

    $default  reduce using rule 2 (specification)


state 21

    9 declarations: class_declaration .

    $default  reduce using rule 9 (declarations)


state 22

    8 declarations: function_prototype .

    $default  reduce using rule 8 (declarations)


state 23

   18 function_prototype: function_decl . TOK_SEMICOLON
   20 function_definition: function_decl . func_body_statement_recog TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 71
    TOK_LBRACE     shift, and go to state 72

    func_body_statement_recog  go to state 73


state 24

    7 declarations: function_definition .

    $default  reduce using rule 7 (declarations)


state 25

   80 func_call_stmt: function_invocation . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 74


state 26

    5 declarations: event_declaration .

    $default  reduce using rule 5 (declarations)


state 27

    6 declarations: rule .

    $default  reduce using rule 6 (declarations)


state 28

   47 event_pattern: primitive_pat .

    $default  reduce using rule 47 (event_pattern)


state 29

   43 rule: event_pattern . TOK_ARROW rule_body1
   50 binary_pattern_operators: event_pattern . TOK_PAT_OR event_pattern
   51                         | event_pattern . TOK_PAT_STAR
   52                         | event_pattern . TOK_COLON event_pattern

    TOK_PAT_STAR  shift, and go to state 75
    TOK_PAT_OR    shift, and go to state 76
    TOK_COLON     shift, and go to state 77
    TOK_ARROW     shift, and go to state 78


state 30

   48 event_pattern: binary_pattern_operators .

    $default  reduce using rule 48 (event_pattern)


state 31

   45 primitive_pat: any_event_recog .

    $default  reduce using rule 45 (primitive_pat)


state 32

    4 declarations: variable_decl .

    $default  reduce using rule 4 (declarations)


state 33

   10 declarations: statements .

    $default  reduce using rule 10 (declarations)


state 34

   77 statements: func_call_stmt .

    $default  reduce using rule 77 (statements)


state 35

   75 statements: if_then_else_stmt .

    $default  reduce using rule 75 (statements)


state 36

  125 assignments: ref_expression . TOK_ASSIGN expressions

    TOK_ASSIGN  shift, and go to state 79


state 37

   76 statements: asg_stmt .

    $default  reduce using rule 76 (statements)


state 38

  124 asg_stmt: assignments . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 80


state 39

   25 function_invocation: id_recognition . TOK_LPAREN expr_list TOK_RPAREN

    TOK_LPAREN  shift, and go to state 81


state 40

   19 function_decl: type_recognition . id_recognition formal_param_list1
   67 variable_decl: type_recognition . variable_decl_list semicolon

    TOK_IDENT  shift, and go to state 82

    variable_decl_list  go to state 83
    var                 go to state 84
    variable            go to state 85
    id_recognition      go to state 86


state 41

   44 primitive_pat: TOK_IDENT . ep_list_recognition
   46              | TOK_IDENT . ep_list_recognition TOK_BITOR expressions

    TOK_LPAREN  shift, and go to state 67
    TOK_IDENT   shift, and go to state 87

    ep_list_recognition  go to state 70


state 42

   50 binary_pattern_operators: event_pattern . TOK_PAT_OR event_pattern
   51                         | event_pattern . TOK_PAT_STAR
   52                         | event_pattern . TOK_COLON event_pattern
   53                         | TOK_NOT event_pattern .

    $default  reduce using rule 53 (binary_pattern_operators)


state 43

   49 event_pattern: TOK_LPAREN event_pattern . TOK_RPAREN
   50 binary_pattern_operators: event_pattern . TOK_PAT_OR event_pattern
   51                         | event_pattern . TOK_PAT_STAR
   52                         | event_pattern . TOK_COLON event_pattern

    TOK_PAT_STAR  shift, and go to state 75
    TOK_PAT_OR    shift, and go to state 76
    TOK_COLON     shift, and go to state 77
    TOK_RPAREN    shift, and go to state 88


state 44

   87 if_then_else_stmt: TOK_IF TOK_LPAREN . condition_exp TOK_RPAREN if_body else_statement
   88                  | TOK_IF TOK_LPAREN . condition_exp TOK_RPAREN if_body

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    condition_exp            go to state 89
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 90
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 45

   16 class_declaration: TOK_CLASS error . TOK_SEMICOLON TOK_SEMICOLON
   17                  | TOK_CLASS error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 91


state 46

  131 id_recognition: TOK_IDENT .

    $default  reduce using rule 131 (id_recognition)


state 47

   14 class_declaration: TOK_CLASS id_recognition . TOK_SEMICOLON TOK_SEMICOLON
   15                  | TOK_CLASS id_recognition . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 92


state 48

  115 unary_operators: TOK_MINUS . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 93
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 49

  114 unary_operators: TOK_BITNOT . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 94
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 50

  113 unary_operators: TOK_NOT . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 95
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 51

  120 expressions: TOK_LPAREN . expressions TOK_RPAREN

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 96
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 52

  127 literals: TOK_UINTNUM .

    $default  reduce using rule 127 (literals)


state 53

  128 literals: TOK_DOUBLENUM .

    $default  reduce using rule 128 (literals)


state 54

  126 literals: TOK_STRCONST .

    $default  reduce using rule 126 (literals)


state 55

  129 literals: TOK_TRUE .

    $default  reduce using rule 129 (literals)


state 56

  130 literals: TOK_FALSE .

    $default  reduce using rule 130 (literals)


state 57

  123 ref_expression: TOK_IDENT .
  131 id_recognition: TOK_IDENT .

    TOK_LPAREN  reduce using rule 131 (id_recognition)
    $default    reduce using rule 123 (ref_expression)


state 58

  118 expressions: function_invocation .

    $default  reduce using rule 118 (expressions)


state 59

  122 expressions: mathematical_expression .

    $default  reduce using rule 122 (expressions)


state 60

  121 expressions: unary_operators .

    $default  reduce using rule 121 (expressions)


state 61

   79 statements: TOK_RETURN expressions . TOK_SEMICOLON
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS       shift, and go to state 97
    TOK_MINUS      shift, and go to state 98
    TOK_MULT       shift, and go to state 99
    TOK_DIV        shift, and go to state 100
    TOK_MOD        shift, and go to state 101
    TOK_BITAND     shift, and go to state 102
    TOK_BITOR      shift, and go to state 103
    TOK_BITXOR     shift, and go to state 104
    TOK_SHL        shift, and go to state 105
    TOK_SHR        shift, and go to state 106
    TOK_GT         shift, and go to state 107
    TOK_LT         shift, and go to state 108
    TOK_GE         shift, and go to state 109
    TOK_LE         shift, and go to state 110
    TOK_EQ         shift, and go to state 111
    TOK_NE         shift, and go to state 112
    TOK_AND        shift, and go to state 113
    TOK_OR         shift, and go to state 114
    TOK_SEMICOLON  shift, and go to state 115


state 62

  116 expressions: ref_expression .
  125 assignments: ref_expression . TOK_ASSIGN expressions

    TOK_ASSIGN  shift, and go to state 79

    $default  reduce using rule 116 (expressions)


state 63

  117 expressions: assignments .

    $default  reduce using rule 117 (expressions)


state 64

  119 expressions: literals .

    $default  reduce using rule 119 (expressions)


state 65

   42 event_declaration: TOK_EVENT id_recognition . formal_param_list TOK_SEMICOLON

    TOK_LPAREN    shift, and go to state 116
    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param_list  go to state 118
    formal_param       go to state 119
    type_recognition   go to state 120


state 66

  138 type_recognition: TOK_UNSIGNED TOK_INT .

    $default  reduce using rule 138 (type_recognition)


state 67

   57 ep_list_recognition: TOK_LPAREN . ep_list_recognition TOK_RPAREN
   60                    | TOK_LPAREN . TOK_RPAREN

    TOK_LPAREN  shift, and go to state 67
    TOK_RPAREN  shift, and go to state 121
    TOK_IDENT   shift, and go to state 87

    ep_list_recognition  go to state 122


state 68

   13 general_list: TOK_IDENT .
   59 ep_list_recognition: TOK_IDENT .

    TOK_COMMA      reduce using rule 13 (general_list)
    TOK_COMMA      [reduce using rule 59 (ep_list_recognition)]
    TOK_SEMICOLON  reduce using rule 13 (general_list)
    $default       reduce using rule 59 (ep_list_recognition)


state 69

   11 declarations: TOK_IDENT general_list . semicolon
   12 general_list: general_list . TOK_COMMA TOK_IDENT

    TOK_COMMA      shift, and go to state 123
    TOK_SEMICOLON  shift, and go to state 124

    semicolon  go to state 125


state 70

   44 primitive_pat: TOK_IDENT ep_list_recognition .
   46              | TOK_IDENT ep_list_recognition . TOK_BITOR expressions
   58 ep_list_recognition: ep_list_recognition . TOK_COMMA TOK_IDENT

    TOK_BITOR  shift, and go to state 126
    TOK_COMMA  shift, and go to state 127

    $default  reduce using rule 44 (primitive_pat)


state 71

   18 function_prototype: function_decl TOK_SEMICOLON .

    $default  reduce using rule 18 (function_prototype)


state 72

   21 func_body_statement_recog: TOK_LBRACE . func_body TOK_RBRACE

    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    TOK_IDENT  [reduce using rule 24 (func_body)]
    $default   reduce using rule 24 (func_body)

    func_body            go to state 128
    func_local_var_decl  go to state 129
    type_recognition     go to state 130


state 73

   20 function_definition: function_decl func_body_statement_recog . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 131


state 74

   80 func_call_stmt: function_invocation TOK_SEMICOLON .

    $default  reduce using rule 80 (func_call_stmt)


state 75

   51 binary_pattern_operators: event_pattern TOK_PAT_STAR .

    $default  reduce using rule 51 (binary_pattern_operators)


state 76

   50 binary_pattern_operators: event_pattern TOK_PAT_OR . event_pattern

    TOK_NOT     shift, and go to state 4
    TOK_LPAREN  shift, and go to state 6
    TOK_ANY     shift, and go to state 11
    TOK_IDENT   shift, and go to state 41

    primitive_pat             go to state 28
    event_pattern             go to state 132
    binary_pattern_operators  go to state 30
    any_event_recog           go to state 31


state 77

   52 binary_pattern_operators: event_pattern TOK_COLON . event_pattern

    TOK_NOT     shift, and go to state 4
    TOK_LPAREN  shift, and go to state 6
    TOK_ANY     shift, and go to state 11
    TOK_IDENT   shift, and go to state 41

    primitive_pat             go to state 28
    event_pattern             go to state 133
    binary_pattern_operators  go to state 30
    any_event_recog           go to state 31


state 78

   43 rule: event_pattern TOK_ARROW . rule_body1

    TOK_SEMICOLON  shift, and go to state 5
    TOK_LBRACE     shift, and go to state 134
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    rule_body1           go to state 135
    statements           go to state 136
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 79

  125 assignments: ref_expression TOK_ASSIGN . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 137
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 80

  124 asg_stmt: assignments TOK_SEMICOLON .

    $default  reduce using rule 124 (asg_stmt)


state 81

   25 function_invocation: id_recognition TOK_LPAREN . expr_list TOK_RPAREN

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    $default  reduce using rule 28 (expr_list)

    function_invocation      go to state 58
    expr_list                go to state 138
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 139
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 82

   72 variable: TOK_IDENT .
  131 id_recognition: TOK_IDENT .

    TOK_COMMA      reduce using rule 72 (variable)
    TOK_SEMICOLON  reduce using rule 72 (variable)
    $default       reduce using rule 131 (id_recognition)


state 83

   67 variable_decl: type_recognition variable_decl_list . semicolon
   68 variable_decl_list: variable_decl_list . TOK_COMMA var

    TOK_COMMA      shift, and go to state 140
    TOK_SEMICOLON  shift, and go to state 124

    semicolon  go to state 141


state 84

   69 variable_decl_list: var .

    $default  reduce using rule 69 (variable_decl_list)


state 85

   70 var: variable .

    $default  reduce using rule 70 (var)


state 86

   19 function_decl: type_recognition id_recognition . formal_param_list1
   71 var: id_recognition . TOK_ASSIGN expressions

    TOK_ASSIGN    shift, and go to state 142
    TOK_LPAREN    shift, and go to state 143
    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param_list1  go to state 144
    formal_param1       go to state 145
    type_recognition    go to state 146


state 87

   59 ep_list_recognition: TOK_IDENT .

    $default  reduce using rule 59 (ep_list_recognition)


state 88

   49 event_pattern: TOK_LPAREN event_pattern TOK_RPAREN .

    $default  reduce using rule 49 (event_pattern)


state 89

   87 if_then_else_stmt: TOK_IF TOK_LPAREN condition_exp . TOK_RPAREN if_body else_statement
   88                  | TOK_IF TOK_LPAREN condition_exp . TOK_RPAREN if_body

    TOK_RPAREN  shift, and go to state 147


state 90

   91 condition_exp: expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 91 (condition_exp)


state 91

   16 class_declaration: TOK_CLASS error TOK_SEMICOLON . TOK_SEMICOLON
   17                  | TOK_CLASS error TOK_SEMICOLON .

    TOK_SEMICOLON  shift, and go to state 148

    TOK_SEMICOLON  [reduce using rule 17 (class_declaration)]
    $default       reduce using rule 17 (class_declaration)


state 92

   14 class_declaration: TOK_CLASS id_recognition TOK_SEMICOLON . TOK_SEMICOLON
   15                  | TOK_CLASS id_recognition TOK_SEMICOLON .

    TOK_SEMICOLON  shift, and go to state 149

    TOK_SEMICOLON  [reduce using rule 15 (class_declaration)]
    $default       reduce using rule 15 (class_declaration)


state 93

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  115 unary_operators: TOK_MINUS expressions .

    $default  reduce using rule 115 (unary_operators)


state 94

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  114 unary_operators: TOK_BITNOT expressions .

    TOK_PLUS   shift, and go to state 97
    TOK_MINUS  shift, and go to state 98
    TOK_MULT   shift, and go to state 99
    TOK_DIV    shift, and go to state 100
    TOK_MOD    shift, and go to state 101
    TOK_SHL    shift, and go to state 105
    TOK_SHR    shift, and go to state 106

    $default  reduce using rule 114 (unary_operators)


state 95

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  113 unary_operators: TOK_NOT expressions .

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112

    $default  reduce using rule 113 (unary_operators)


state 96

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  120 expressions: TOK_LPAREN expressions . TOK_RPAREN

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114
    TOK_RPAREN  shift, and go to state 150


state 97

   96 mathematical_expression: expressions TOK_PLUS . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 151
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 98

   95 mathematical_expression: expressions TOK_MINUS . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 152
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 99

   97 mathematical_expression: expressions TOK_MULT . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 153
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 100

   98 mathematical_expression: expressions TOK_DIV . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 154
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 101

   99 mathematical_expression: expressions TOK_MOD . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 155
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 102

  108 mathematical_expression: expressions TOK_BITAND . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 156
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 103

  109 mathematical_expression: expressions TOK_BITOR . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 157
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 104

  110 mathematical_expression: expressions TOK_BITXOR . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 158
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 105

  112 mathematical_expression: expressions TOK_SHL . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 159
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 106

  111 mathematical_expression: expressions TOK_SHR . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 160
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 107

  100 mathematical_expression: expressions TOK_GT . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 161
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 108

  101 mathematical_expression: expressions TOK_LT . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 162
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 109

  102 mathematical_expression: expressions TOK_GE . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 163
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 110

  103 mathematical_expression: expressions TOK_LE . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 164
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 111

  105 mathematical_expression: expressions TOK_EQ . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 165
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 112

  104 mathematical_expression: expressions TOK_NE . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 166
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 113

  106 mathematical_expression: expressions TOK_AND . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 167
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 114

  107 mathematical_expression: expressions TOK_OR . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 168
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 115

   79 statements: TOK_RETURN expressions TOK_SEMICOLON .

    $default  reduce using rule 79 (statements)


state 116

   62 formal_param_list: TOK_LPAREN . formal_param_list TOK_RPAREN
   65                  | TOK_LPAREN . TOK_RPAREN

    TOK_LPAREN    shift, and go to state 116
    TOK_RPAREN    shift, and go to state 169
    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param_list  go to state 170
    formal_param       go to state 119
    type_recognition   go to state 120


state 117

  139 type_recognition: TOK_IDENT .

    $default  reduce using rule 139 (type_recognition)


state 118

   42 event_declaration: TOK_EVENT id_recognition formal_param_list . TOK_SEMICOLON
   63 formal_param_list: formal_param_list . TOK_COMMA formal_param

    TOK_COMMA      shift, and go to state 171
    TOK_SEMICOLON  shift, and go to state 172


state 119

   64 formal_param_list: formal_param .

    $default  reduce using rule 64 (formal_param_list)


state 120

   66 formal_param: type_recognition . id_recognition

    TOK_IDENT  shift, and go to state 46

    id_recognition  go to state 173


state 121

   60 ep_list_recognition: TOK_LPAREN TOK_RPAREN .

    $default  reduce using rule 60 (ep_list_recognition)


state 122

   57 ep_list_recognition: TOK_LPAREN ep_list_recognition . TOK_RPAREN
   58                    | ep_list_recognition . TOK_COMMA TOK_IDENT

    TOK_COMMA   shift, and go to state 127
    TOK_RPAREN  shift, and go to state 174


state 123

   12 general_list: general_list TOK_COMMA . TOK_IDENT

    TOK_IDENT  shift, and go to state 175


state 124

   74 semicolon: TOK_SEMICOLON .

    $default  reduce using rule 74 (semicolon)


state 125

   11 declarations: TOK_IDENT general_list semicolon .
   73 semicolon: semicolon . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 176

    TOK_SEMICOLON  [reduce using rule 11 (declarations)]
    $default       reduce using rule 11 (declarations)


state 126

   46 primitive_pat: TOK_IDENT ep_list_recognition TOK_BITOR . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 177
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 127

   58 ep_list_recognition: ep_list_recognition TOK_COMMA . TOK_IDENT

    TOK_IDENT  shift, and go to state 178


state 128

   21 func_body_statement_recog: TOK_LBRACE func_body . TOK_RBRACE
   23 func_body: func_body . compoundStmt3

    TOK_SEMICOLON  shift, and go to state 5
    TOK_RBRACE     shift, and go to state 179
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 180
    func_call_stmt       go to state 34
    compoundStmt3        go to state 181
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 129

   22 func_body: func_local_var_decl .

    $default  reduce using rule 22 (func_body)


state 130

   34 func_local_var_decl: type_recognition . variable_decl_list1 TOK_SEMICOLON
   35                    | type_recognition . error TOK_SEMICOLON

    error      shift, and go to state 182
    TOK_IDENT  shift, and go to state 46

    variable_decl_list1  go to state 183
    variable_wo_val1     go to state 184
    variable_w_val1      go to state 185
    variable1            go to state 186
    id_recognition       go to state 187


state 131

   20 function_definition: function_decl func_body_statement_recog TOK_SEMICOLON .

    $default  reduce using rule 20 (function_definition)


state 132

   50 binary_pattern_operators: event_pattern . TOK_PAT_OR event_pattern
   50                         | event_pattern TOK_PAT_OR event_pattern .
   51                         | event_pattern . TOK_PAT_STAR
   52                         | event_pattern . TOK_COLON event_pattern

    TOK_PAT_STAR  shift, and go to state 75
    TOK_COLON     shift, and go to state 77

    $default  reduce using rule 50 (binary_pattern_operators)


state 133

   50 binary_pattern_operators: event_pattern . TOK_PAT_OR event_pattern
   51                         | event_pattern . TOK_PAT_STAR
   52                         | event_pattern . TOK_COLON event_pattern
   52                         | event_pattern TOK_COLON event_pattern .

    TOK_PAT_STAR  shift, and go to state 75

    $default  reduce using rule 52 (binary_pattern_operators)


state 134

   54 rule_body1: TOK_LBRACE . compoundStmt1 TOK_RBRACE TOK_SEMICOLON
   55           | TOK_LBRACE . compoundStmt1 TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 5
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 188
    func_call_stmt       go to state 34
    compoundStmt1        go to state 189
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 135

   43 rule: event_pattern TOK_ARROW rule_body1 .

    $default  reduce using rule 43 (rule)


state 136

   56 rule_body1: statements .

    $default  reduce using rule 56 (rule_body1)


state 137

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  125 assignments: ref_expression TOK_ASSIGN expressions .

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 125 (assignments)


state 138

   25 function_invocation: id_recognition TOK_LPAREN expr_list . TOK_RPAREN
   26 expr_list: expr_list . TOK_COMMA expressions

    TOK_COMMA   shift, and go to state 190
    TOK_RPAREN  shift, and go to state 191


state 139

   27 expr_list: expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 27 (expr_list)


state 140

   68 variable_decl_list: variable_decl_list TOK_COMMA . var

    TOK_IDENT  shift, and go to state 82

    var             go to state 192
    variable        go to state 85
    id_recognition  go to state 193


state 141

   67 variable_decl: type_recognition variable_decl_list semicolon .
   73 semicolon: semicolon . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 176

    TOK_SEMICOLON  [reduce using rule 67 (variable_decl)]
    $default       reduce using rule 67 (variable_decl)


state 142

   71 var: id_recognition TOK_ASSIGN . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 194
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 143

   29 formal_param_list1: TOK_LPAREN . formal_param_list1 TOK_RPAREN
   32                   | TOK_LPAREN . TOK_RPAREN

    TOK_LPAREN    shift, and go to state 143
    TOK_RPAREN    shift, and go to state 195
    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param_list1  go to state 196
    formal_param1       go to state 145
    type_recognition    go to state 146


state 144

   19 function_decl: type_recognition id_recognition formal_param_list1 .
   30 formal_param_list1: formal_param_list1 . TOK_COMMA formal_param1

    TOK_COMMA  shift, and go to state 197

    $default  reduce using rule 19 (function_decl)


state 145

   31 formal_param_list1: formal_param1 .

    $default  reduce using rule 31 (formal_param_list1)


state 146

   33 formal_param1: type_recognition . id_recognition

    TOK_IDENT  shift, and go to state 46

    id_recognition  go to state 198


state 147

   87 if_then_else_stmt: TOK_IF TOK_LPAREN condition_exp TOK_RPAREN . if_body else_statement
   88                  | TOK_IF TOK_LPAREN condition_exp TOK_RPAREN . if_body

    TOK_SEMICOLON  shift, and go to state 5
    TOK_LBRACE     shift, and go to state 199
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 200
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    if_body              go to state 201
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 148

   16 class_declaration: TOK_CLASS error TOK_SEMICOLON TOK_SEMICOLON .

    $default  reduce using rule 16 (class_declaration)


state 149

   14 class_declaration: TOK_CLASS id_recognition TOK_SEMICOLON TOK_SEMICOLON .

    $default  reduce using rule 14 (class_declaration)


state 150

  120 expressions: TOK_LPAREN expressions TOK_RPAREN .

    $default  reduce using rule 120 (expressions)


state 151

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   96                        | expressions TOK_PLUS expressions .
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_MULT  shift, and go to state 99
    TOK_DIV   shift, and go to state 100
    TOK_MOD   shift, and go to state 101

    $default  reduce using rule 96 (mathematical_expression)


state 152

   95 mathematical_expression: expressions . TOK_MINUS expressions
   95                        | expressions TOK_MINUS expressions .
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_MULT  shift, and go to state 99
    TOK_DIV   shift, and go to state 100
    TOK_MOD   shift, and go to state 101

    $default  reduce using rule 95 (mathematical_expression)


state 153

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   97                        | expressions TOK_MULT expressions .
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    $default  reduce using rule 97 (mathematical_expression)


state 154

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   98                        | expressions TOK_DIV expressions .
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    $default  reduce using rule 98 (mathematical_expression)


state 155

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
   99                        | expressions TOK_MOD expressions .
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    $default  reduce using rule 99 (mathematical_expression)


state 156

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  108                        | expressions TOK_BITAND expressions .
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS   shift, and go to state 97
    TOK_MINUS  shift, and go to state 98
    TOK_MULT   shift, and go to state 99
    TOK_DIV    shift, and go to state 100
    TOK_MOD    shift, and go to state 101
    TOK_SHL    shift, and go to state 105
    TOK_SHR    shift, and go to state 106

    $default  reduce using rule 108 (mathematical_expression)


state 157

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  109                        | expressions TOK_BITOR expressions .
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    $default  reduce using rule 109 (mathematical_expression)


state 158

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  110                        | expressions TOK_BITXOR expressions .
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    $default  reduce using rule 110 (mathematical_expression)


state 159

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions
  112                        | expressions TOK_SHL expressions .

    TOK_PLUS   shift, and go to state 97
    TOK_MINUS  shift, and go to state 98
    TOK_MULT   shift, and go to state 99
    TOK_DIV    shift, and go to state 100
    TOK_MOD    shift, and go to state 101

    $default  reduce using rule 112 (mathematical_expression)


state 160

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  111                        | expressions TOK_SHR expressions .
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS   shift, and go to state 97
    TOK_MINUS  shift, and go to state 98
    TOK_MULT   shift, and go to state 99
    TOK_DIV    shift, and go to state 100
    TOK_MOD    shift, and go to state 101

    $default  reduce using rule 111 (mathematical_expression)


state 161

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  100                        | expressions TOK_GT expressions .
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 100 (mathematical_expression)


state 162

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  101                        | expressions TOK_LT expressions .
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 101 (mathematical_expression)


state 163

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  102                        | expressions TOK_GE expressions .
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 102 (mathematical_expression)


state 164

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  103                        | expressions TOK_LE expressions .
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 103 (mathematical_expression)


state 165

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  105                        | expressions TOK_EQ expressions .
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 105 (mathematical_expression)


state 166

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  104                        | expressions TOK_NE expressions .
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 104 (mathematical_expression)


state 167

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  106                        | expressions TOK_AND expressions .
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112

    $default  reduce using rule 106 (mathematical_expression)


state 168

   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  107                        | expressions TOK_OR expressions .
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113

    $default  reduce using rule 107 (mathematical_expression)


state 169

   65 formal_param_list: TOK_LPAREN TOK_RPAREN .

    $default  reduce using rule 65 (formal_param_list)


state 170

   62 formal_param_list: TOK_LPAREN formal_param_list . TOK_RPAREN
   63                  | formal_param_list . TOK_COMMA formal_param

    TOK_COMMA   shift, and go to state 171
    TOK_RPAREN  shift, and go to state 202


state 171

   63 formal_param_list: formal_param_list TOK_COMMA . formal_param

    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param      go to state 203
    type_recognition  go to state 120


state 172

   42 event_declaration: TOK_EVENT id_recognition formal_param_list TOK_SEMICOLON .

    $default  reduce using rule 42 (event_declaration)


state 173

   66 formal_param: type_recognition id_recognition .

    $default  reduce using rule 66 (formal_param)


state 174

   57 ep_list_recognition: TOK_LPAREN ep_list_recognition TOK_RPAREN .

    $default  reduce using rule 57 (ep_list_recognition)


state 175

   12 general_list: general_list TOK_COMMA TOK_IDENT .

    $default  reduce using rule 12 (general_list)


state 176

   73 semicolon: semicolon TOK_SEMICOLON .

    $default  reduce using rule 73 (semicolon)


state 177

   46 primitive_pat: TOK_IDENT ep_list_recognition TOK_BITOR expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 46 (primitive_pat)


state 178

   58 ep_list_recognition: ep_list_recognition TOK_COMMA TOK_IDENT .

    $default  reduce using rule 58 (ep_list_recognition)


state 179

   21 func_body_statement_recog: TOK_LBRACE func_body TOK_RBRACE .

    $default  reduce using rule 21 (func_body_statement_recog)


state 180

   86 compoundStmt3: statements .

    $default  reduce using rule 86 (compoundStmt3)


state 181

   23 func_body: func_body compoundStmt3 .
   85 compoundStmt3: compoundStmt3 . statements

    TOK_SEMICOLON  shift, and go to state 5
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    TOK_SEMICOLON  [reduce using rule 23 (func_body)]
    TOK_IF         [reduce using rule 23 (func_body)]
    TOK_RETURN     [reduce using rule 23 (func_body)]
    TOK_IDENT      [reduce using rule 23 (func_body)]
    $default       reduce using rule 23 (func_body)

    function_invocation  go to state 25
    statements           go to state 204
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 182

   35 func_local_var_decl: type_recognition error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 205


state 183

   34 func_local_var_decl: type_recognition variable_decl_list1 . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 206


state 184

   36 variable_decl_list1: variable_wo_val1 .
   38 variable_wo_val1: variable_wo_val1 . TOK_COMMA variable1

    TOK_COMMA  shift, and go to state 207

    $default  reduce using rule 36 (variable_decl_list1)


state 185

   37 variable_decl_list1: variable_w_val1 .

    $default  reduce using rule 37 (variable_decl_list1)


state 186

   39 variable_wo_val1: variable1 .

    $default  reduce using rule 39 (variable_wo_val1)


state 187

   40 variable_w_val1: id_recognition . TOK_ASSIGN expressions
   41 variable1: id_recognition .

    TOK_ASSIGN  shift, and go to state 208

    $default  reduce using rule 41 (variable1)


state 188

   82 compoundStmt1: statements .

    $default  reduce using rule 82 (compoundStmt1)


state 189

   54 rule_body1: TOK_LBRACE compoundStmt1 . TOK_RBRACE TOK_SEMICOLON
   55           | TOK_LBRACE compoundStmt1 . TOK_RBRACE
   81 compoundStmt1: compoundStmt1 . statements

    TOK_SEMICOLON  shift, and go to state 5
    TOK_RBRACE     shift, and go to state 209
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 210
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 190

   26 expr_list: expr_list TOK_COMMA . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 211
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 191

   25 function_invocation: id_recognition TOK_LPAREN expr_list TOK_RPAREN .

    $default  reduce using rule 25 (function_invocation)


state 192

   68 variable_decl_list: variable_decl_list TOK_COMMA var .

    $default  reduce using rule 68 (variable_decl_list)


state 193

   71 var: id_recognition . TOK_ASSIGN expressions

    TOK_ASSIGN  shift, and go to state 142


state 194

   71 var: id_recognition TOK_ASSIGN expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 71 (var)


state 195

   32 formal_param_list1: TOK_LPAREN TOK_RPAREN .

    $default  reduce using rule 32 (formal_param_list1)


state 196

   29 formal_param_list1: TOK_LPAREN formal_param_list1 . TOK_RPAREN
   30                   | formal_param_list1 . TOK_COMMA formal_param1

    TOK_COMMA   shift, and go to state 197
    TOK_RPAREN  shift, and go to state 212


state 197

   30 formal_param_list1: formal_param_list1 TOK_COMMA . formal_param1

    TOK_VOID      shift, and go to state 12
    TOK_STRING    shift, and go to state 13
    TOK_INT       shift, and go to state 14
    TOK_UNSIGNED  shift, and go to state 15
    TOK_BOOL      shift, and go to state 16
    TOK_BYTE      shift, and go to state 17
    TOK_DOUBLE    shift, and go to state 18
    TOK_IDENT     shift, and go to state 117

    formal_param1     go to state 213
    type_recognition  go to state 146


state 198

   33 formal_param1: type_recognition id_recognition .

    $default  reduce using rule 33 (formal_param1)


state 199

   89 if_body: TOK_LBRACE . compoundStmt2 TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 5
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 214
    func_call_stmt       go to state 34
    compoundStmt2        go to state 215
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 200

   90 if_body: statements .

    $default  reduce using rule 90 (if_body)


state 201

   87 if_then_else_stmt: TOK_IF TOK_LPAREN condition_exp TOK_RPAREN if_body . else_statement
   88                  | TOK_IF TOK_LPAREN condition_exp TOK_RPAREN if_body .

    TOK_ELSE  shift, and go to state 216

    TOK_ELSE  [reduce using rule 88 (if_then_else_stmt)]
    $default  reduce using rule 88 (if_then_else_stmt)

    else_statement  go to state 217


state 202

   62 formal_param_list: TOK_LPAREN formal_param_list TOK_RPAREN .

    $default  reduce using rule 62 (formal_param_list)


state 203

   63 formal_param_list: formal_param_list TOK_COMMA formal_param .

    $default  reduce using rule 63 (formal_param_list)


state 204

   85 compoundStmt3: compoundStmt3 statements .

    $default  reduce using rule 85 (compoundStmt3)


state 205

   35 func_local_var_decl: type_recognition error TOK_SEMICOLON .

    $default  reduce using rule 35 (func_local_var_decl)


state 206

   34 func_local_var_decl: type_recognition variable_decl_list1 TOK_SEMICOLON .

    $default  reduce using rule 34 (func_local_var_decl)


state 207

   38 variable_wo_val1: variable_wo_val1 TOK_COMMA . variable1

    TOK_IDENT  shift, and go to state 46

    variable1       go to state 218
    id_recognition  go to state 219


state 208

   40 variable_w_val1: id_recognition TOK_ASSIGN . expressions

    TOK_MINUS      shift, and go to state 48
    TOK_BITNOT     shift, and go to state 49
    TOK_NOT        shift, and go to state 50
    TOK_LPAREN     shift, and go to state 51
    TOK_UINTNUM    shift, and go to state 52
    TOK_DOUBLENUM  shift, and go to state 53
    TOK_STRCONST   shift, and go to state 54
    TOK_TRUE       shift, and go to state 55
    TOK_FALSE      shift, and go to state 56
    TOK_IDENT      shift, and go to state 57

    function_invocation      go to state 58
    mathematical_expression  go to state 59
    unary_operators          go to state 60
    expressions              go to state 220
    ref_expression           go to state 62
    assignments              go to state 63
    literals                 go to state 64
    id_recognition           go to state 39


state 209

   54 rule_body1: TOK_LBRACE compoundStmt1 TOK_RBRACE . TOK_SEMICOLON
   55           | TOK_LBRACE compoundStmt1 TOK_RBRACE .

    TOK_SEMICOLON  shift, and go to state 221

    TOK_SEMICOLON  [reduce using rule 55 (rule_body1)]
    $default       reduce using rule 55 (rule_body1)


state 210

   81 compoundStmt1: compoundStmt1 statements .

    $default  reduce using rule 81 (compoundStmt1)


state 211

   26 expr_list: expr_list TOK_COMMA expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 26 (expr_list)


state 212

   29 formal_param_list1: TOK_LPAREN formal_param_list1 TOK_RPAREN .

    $default  reduce using rule 29 (formal_param_list1)


state 213

   30 formal_param_list1: formal_param_list1 TOK_COMMA formal_param1 .

    $default  reduce using rule 30 (formal_param_list1)


state 214

   84 compoundStmt2: statements .

    $default  reduce using rule 84 (compoundStmt2)


state 215

   83 compoundStmt2: compoundStmt2 . statements
   89 if_body: TOK_LBRACE compoundStmt2 . TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 5
    TOK_RBRACE     shift, and go to state 222
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 223
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 216

   92 else_statement: TOK_ELSE . else_body

    TOK_SEMICOLON  shift, and go to state 5
    TOK_LBRACE     shift, and go to state 224
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 225
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    else_body            go to state 226
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 217

   87 if_then_else_stmt: TOK_IF TOK_LPAREN condition_exp TOK_RPAREN if_body else_statement .

    $default  reduce using rule 87 (if_then_else_stmt)


state 218

   38 variable_wo_val1: variable_wo_val1 TOK_COMMA variable1 .

    $default  reduce using rule 38 (variable_wo_val1)


state 219

   41 variable1: id_recognition .

    $default  reduce using rule 41 (variable1)


state 220

   40 variable_w_val1: id_recognition TOK_ASSIGN expressions .
   95 mathematical_expression: expressions . TOK_MINUS expressions
   96                        | expressions . TOK_PLUS expressions
   97                        | expressions . TOK_MULT expressions
   98                        | expressions . TOK_DIV expressions
   99                        | expressions . TOK_MOD expressions
  100                        | expressions . TOK_GT expressions
  101                        | expressions . TOK_LT expressions
  102                        | expressions . TOK_GE expressions
  103                        | expressions . TOK_LE expressions
  104                        | expressions . TOK_NE expressions
  105                        | expressions . TOK_EQ expressions
  106                        | expressions . TOK_AND expressions
  107                        | expressions . TOK_OR expressions
  108                        | expressions . TOK_BITAND expressions
  109                        | expressions . TOK_BITOR expressions
  110                        | expressions . TOK_BITXOR expressions
  111                        | expressions . TOK_SHR expressions
  112                        | expressions . TOK_SHL expressions

    TOK_PLUS    shift, and go to state 97
    TOK_MINUS   shift, and go to state 98
    TOK_MULT    shift, and go to state 99
    TOK_DIV     shift, and go to state 100
    TOK_MOD     shift, and go to state 101
    TOK_BITAND  shift, and go to state 102
    TOK_BITOR   shift, and go to state 103
    TOK_BITXOR  shift, and go to state 104
    TOK_SHL     shift, and go to state 105
    TOK_SHR     shift, and go to state 106
    TOK_GT      shift, and go to state 107
    TOK_LT      shift, and go to state 108
    TOK_GE      shift, and go to state 109
    TOK_LE      shift, and go to state 110
    TOK_EQ      shift, and go to state 111
    TOK_NE      shift, and go to state 112
    TOK_AND     shift, and go to state 113
    TOK_OR      shift, and go to state 114

    $default  reduce using rule 40 (variable_w_val1)


state 221

   54 rule_body1: TOK_LBRACE compoundStmt1 TOK_RBRACE TOK_SEMICOLON .

    $default  reduce using rule 54 (rule_body1)


state 222

   89 if_body: TOK_LBRACE compoundStmt2 TOK_RBRACE .

    $default  reduce using rule 89 (if_body)


state 223

   83 compoundStmt2: compoundStmt2 statements .

    $default  reduce using rule 83 (compoundStmt2)


state 224

   94 else_body: TOK_LBRACE . compoundStmt2 TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 5
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 214
    func_call_stmt       go to state 34
    compoundStmt2        go to state 227
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 225

   93 else_body: statements .

    $default  reduce using rule 93 (else_body)


state 226

   92 else_statement: TOK_ELSE else_body .

    $default  reduce using rule 92 (else_statement)


state 227

   83 compoundStmt2: compoundStmt2 . statements
   94 else_body: TOK_LBRACE compoundStmt2 . TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 5
    TOK_RBRACE     shift, and go to state 228
    TOK_IF         shift, and go to state 7
    TOK_RETURN     shift, and go to state 9
    TOK_IDENT      shift, and go to state 57

    function_invocation  go to state 25
    statements           go to state 223
    func_call_stmt       go to state 34
    if_then_else_stmt    go to state 35
    ref_expression       go to state 36
    asg_stmt             go to state 37
    assignments          go to state 38
    id_recognition       go to state 39


state 228

   94 else_body: TOK_LBRACE compoundStmt2 TOK_RBRACE .

    $default  reduce using rule 94 (else_body)
